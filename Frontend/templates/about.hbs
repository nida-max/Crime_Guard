<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HomePage</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
       :root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;
  color: black;
  background-color: whitesmoke;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  box-sizing: border-box;
}

.bouncing-blob {
  width: 32vw;
  aspect-ratio: 1;
  border-radius: 50%;
  will-change: transform;
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  transform-origin: left top;
}

.bouncing-blob--blue {
  background: #4783c7;
}

.bouncing-blob--white {
  background: #ffffff;
  z-index: 2;
  width: 15vw;
}

.bouncing-blob--purple {
  background: #8c8ff1;
}

.bouncing-blob--pink {
  background: #e289cd50;
}

.bouncing-blobs-container {
  position: fixed;
  z-index: -1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.bouncing-blobs-glass {
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -webkit-backdrop-filter: blur(140px);
  backdrop-filter: blur(140px);
  pointer-events: none;
}

.bouncing-blobs {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

        html {
            box-sizing: border-box;
        }

        *, *:before, *:after {
            box-sizing: inherit;
        }

        .column {
            float: left;
            width: 30%;
            margin-bottom: 16px;
            margin-left: 43px;
            padding: 0 8px;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            margin-top: 10em;
            margin-bottom: 10em;
            background-color: #eeeeee;
            box-shadow: 0 0 15px rgba(11, 54, 157, 0.336);
            padding: 10px;
            
        }

        .about-section {
            padding: 50px;
            text-align: center;
            background-color: #302f49;
            color: white;
            margin-bottom: 20px; /* Added margin-bottom */
        }

        .container {
            padding: 0 16px;
        }

        .container::after, .row::after {
            content: "";
            clear: both;
            display: table;
        }

        .title {
            color: grey;
        }

        .button {
            border: none;
            outline: 0;
            display: inline-block;
            padding: 8px;
            color: white;
            background-color: #000;
            text-align: center;
            cursor: pointer;
            width: 100%;
        }

        .button:hover {
            background-color: #555;
        }

        @media screen and (max-width: 650px) {
            .column {
                width: 100%;
                display: block;
            }
        }

      
        h2 {
            text-align: center;
            color: #000000;
        }
        p{font-size: 20px;
        text-align:justify;
        font-family: sans-serif;}





        


        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #f5f5f5;
        }
        .header .logo {
             color: #000;
  margin-left: 10px;
  filter: drop-shadow(10px 10px 15px rgba(0, 0, 0, 0.2));
 
  width: 180px; /* Adjust the width as needed */
}
 

            
           
            .ab{margin-left: 400px;}




        .nav-items {
            display: flex;
            justify-content: space-around;
            margin-left: 30px;
            align-items: center;
            background-color: #f5f5f5;
           
        }
            
        

            .nav-items a {
                text-decoration: none;
                color: #000;
                font-size: 20px;
                padding: 40px 30px;
            }

            
            
           

        .intro {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 200px;
            background-color: #302f49;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }

            .intro h1 {
                font-family: sans-serif;
                font-size: 40px;
                color: #fff;
                font-weight: bold;
                text-transform: uppercase;
                margin: 0;
            }

            .intro p {
                font-size: 20px;
                color: #d1d1d1;
                text-transform: uppercase;
                margin: 20px 0;
            }
        h5 {
font-family: sans-serif;
font-size: 20px;
color: #000;
font-weight: bold;
margin-right: 280px;
text-transform: uppercase;
margin-left: 2px;
}


        .about-me {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 40px 80px;
            border-top: 2px solid #eeeeee;
        }

            .about-me img {
                width: 500px;
                max-width: 100%;
                height: auto;
                border-radius: 10px;
            }

        .about-me-text h2 {
            font-size: 30px;
            color: #333333;
            text-transform: uppercase;
            margin: 0;
        }

        .about-me-text p {
            font-size: 15px;
            color: #585858;
            margin: 10px 0;
        }
       

        








    </style>
</head>

<body>

    <header class="header">
        <nav class="nav-items">
            <div class="logo-container">
                <img src="pic/h.png" class="logo" />

            </div>
            <h5>CRIME GUARD</h5>

            <div class="ab">
            <a href="/home">Home </a>
            <a href="/about">About</a>
           <a href="/report" >Report</a>
            <a href="/contactus">Contact</a>
            <a href="/signup">Registeration</a>
            </div>
        </nav>
    </header>




    <div class="intro">
        <h1>About Us</h1>
        <p>Crime Guard's aims to bridge gaps in reporting</p>
        
    </div>
    

    <div class="row">
        <div class="column">
            <div class="card">
                <div class="container">
                    <h2>MISSION</h2>
                    <p>At our core, we are committed to revolutionizing the landscape of crime reporting. Our mission is to foster a seamless, transparent process that empowers individuals while bolstering the effectiveness of law enforcement agencies. Through the integration of cutting-edge technology, we endeavor to streamline the reporting process, ensuring swift and accurate dissemination of critical information.

With a focus on transparency, we strive to create an environment where citizens feel empowered to report incidents with confidence. We provide intuitive platforms that simplify the reporting journey, making it accessible.


                    </p>
                </div>
            </div>
        </div>

        <div class="column">
            <div class="card">
                <div class="container">
                    <h2>VISSION</h2>
                    <p>Our vision is to cultivate a safer and more resilient community through the establishment of an accessible Crime Guard. We believe in the power of collaboration, bridging the gap between citizens and law enforcement to create a secure and harmonious environment for all.

At the heart of our mission lies the belief that safety is a collective responsibility. By providing an easily accessible Crime Guard platform, we empower individuals to actively participate in safeguarding their neighborhoods. We foster a sense of unity and shared purpose, driving towards a common goal of security and well-being.

 </p>
                </div>
            </div>
        </div>

        <div class="column">
            <div class="card">
                <div class="container">
                    <h2>ACHEVIEMENTS</h2>
                    <p>By cultivating robust collaboration between communities and law enforcement agencies, we aim to fortify a collective commitment to public safety. Our approach integrates modern technologies to streamline communication channels, enabling swift and transparent crime reporting. Through this partnership, citizens are empowered to play an active role in safeguarding their neighborhoods, while law enforcement gains invaluable insights for enhancing operational efficiency. Together, we strive to build trust, promote accountability, and create a safer environment where everyone feels secure.</p>
                </div>
            </div>
        </div>
    </div>




    <div class="bouncing-blobs-container">
        <div class="bouncing-blobs-glass"></div>
        <div class="bouncing-blobs">
            <div class="bouncing-blob bouncing-blob--blue"></div>
            <div class="bouncing-blob bouncing-blob--blue"></div>
            <div class="bouncing-blob bouncing-blob--blue"></div>
            <div class="bouncing-blob bouncing-blob--white"></div>
            <div class="bouncing-blob bouncing-blob--purple"></div>
            <div class="bouncing-blob bouncing-blob--purple"></div>
            <div class="bouncing-blob bouncing-blob--pink"></div>
        </div>
    </div>
   
    <script>
        const MIN_SPEED = 1.5
        const MAX_SPEED = 2.5

        function randomNumber(min, max) {
            return Math.random() * (max - min) + min
        }

        class Blob {
            constructor(el) {
                this.el = el
                const boundingRect = this.el.getBoundingClientRect()
                this.size = boundingRect.width
                this.initialX = randomNumber(0, window.innerWidth - this.size)
                this.initialY = randomNumber(0, window.innerHeight - this.size)
                this.el.style.top = `${this.initialY}px`
                this.el.style.left = `${this.initialX}px`
                this.vx =
                    randomNumber(MIN_SPEED, MAX_SPEED) * (Math.random() > 0.5 ? 1 : -1)
                this.vy =
                    randomNumber(MIN_SPEED, MAX_SPEED) * (Math.random() > 0.5 ? 1 : -1)
                this.x = this.initialX
                this.y = this.initialY
            }

            update() {
                this.x += this.vx
                this.y += this.vy
                if (this.x >= window.innerWidth - this.size) {
                    this.x = window.innerWidth - this.size
                    this.vx *= -1
                }
                if (this.y >= window.innerHeight - this.size) {
                    this.y = window.innerHeight - this.size
                    this.vy *= -1
                }
                if (this.x <= 0) {
                    this.x = 0
                    this.vx *= -1
                }
                if (this.y <= 0) {
                    this.y = 0
                    this.vy *= -1
                }
            }

            move() {
                this.el.style.transform = `translate(${this.x - this.initialX}px, ${this.y - this.initialY
                    }px)`
            }
        }

        function initBlobs() {
            const blobEls = document.querySelectorAll('.bouncing-blob')
            const blobs = Array.from(blobEls).map((blobEl) => new Blob(blobEl))

            function update() {
                requestAnimationFrame(update)
                blobs.forEach((blob) => {
                    blob.update()
                    blob.move()
                })
            }

            requestAnimationFrame(update)
        }

        initBlobs()

    </script>
</body>

</html>
